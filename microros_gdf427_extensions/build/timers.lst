ARM GAS  /tmp/cc9CcRC8.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"timers.c"
  14              		.text
  15              		.section	.text.prvGetNextExpireTime,"ax",%progbits
  16              		.align	1
  17              		.arch armv7e-m
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu fpv4-sp-d16
  23              	prvGetNextExpireTime:
  24              		@ args = 0, pretend = 0, frame = 0
  25              		@ frame_needed = 0, uses_anonymous_args = 0
  26              		@ link register save eliminated.
  27 0000 064B     		ldr	r3, .L6
  28 0002 1A68     		ldr	r2, [r3]
  29 0004 1368     		ldr	r3, [r2]
  30 0006 2BB9     		cbnz	r3, .L4
  31 0008 0123     		movs	r3, #1
  32              	.L2:
  33 000a 0360     		str	r3, [r0]
  34 000c 23B9     		cbnz	r3, .L5
  35 000e D368     		ldr	r3, [r2, #12]
  36 0010 1868     		ldr	r0, [r3]
  37 0012 7047     		bx	lr
  38              	.L4:
  39 0014 0023     		movs	r3, #0
  40 0016 F8E7     		b	.L2
  41              	.L5:
  42 0018 0020     		movs	r0, #0
  43 001a 7047     		bx	lr
  44              	.L7:
  45              		.align	2
  46              	.L6:
  47 001c 00000000 		.word	.LANCHOR0
  49              		.section	.text.prvInsertTimerInActiveList,"ax",%progbits
  50              		.align	1
  51              		.syntax unified
  52              		.thumb
  53              		.thumb_func
  54              		.fpu fpv4-sp-d16
  56              	prvInsertTimerInActiveList:
  57              		@ args = 0, pretend = 0, frame = 0
  58              		@ frame_needed = 0, uses_anonymous_args = 0
  59 0000 08B5     		push	{r3, lr}
  60 0002 4160     		str	r1, [r0, #4]
ARM GAS  /tmp/cc9CcRC8.s 			page 2


  61 0004 0061     		str	r0, [r0, #16]
  62 0006 9142     		cmp	r1, r2
  63 0008 0CD8     		bhi	.L9
  64 000a D21A     		subs	r2, r2, r3
  65 000c 8369     		ldr	r3, [r0, #24]
  66 000e 9A42     		cmp	r2, r3
  67 0010 01D3     		bcc	.L15
  68 0012 0120     		movs	r0, #1
  69              	.L8:
  70 0014 08BD     		pop	{r3, pc}
  71              	.L15:
  72 0016 011D     		adds	r1, r0, #4
  73 0018 094B     		ldr	r3, .L16
  74 001a 1868     		ldr	r0, [r3]
  75 001c FFF7FEFF 		bl	vListInsert
  76 0020 0020     		movs	r0, #0
  77 0022 F7E7     		b	.L8
  78              	.L9:
  79 0024 9A42     		cmp	r2, r3
  80 0026 01D2     		bcs	.L11
  81 0028 9942     		cmp	r1, r3
  82 002a 06D2     		bcs	.L13
  83              	.L11:
  84 002c 011D     		adds	r1, r0, #4
  85 002e 054B     		ldr	r3, .L16+4
  86 0030 1868     		ldr	r0, [r3]
  87 0032 FFF7FEFF 		bl	vListInsert
  88 0036 0020     		movs	r0, #0
  89 0038 ECE7     		b	.L8
  90              	.L13:
  91 003a 0120     		movs	r0, #1
  92 003c EAE7     		b	.L8
  93              	.L17:
  94 003e 00BF     		.align	2
  95              	.L16:
  96 0040 00000000 		.word	.LANCHOR1
  97 0044 00000000 		.word	.LANCHOR0
  99              		.section	.text.prvCheckForValidListAndQueue,"ax",%progbits
 100              		.align	1
 101              		.syntax unified
 102              		.thumb
 103              		.thumb_func
 104              		.fpu fpv4-sp-d16
 106              	prvCheckForValidListAndQueue:
 107              		@ args = 0, pretend = 0, frame = 0
 108              		@ frame_needed = 0, uses_anonymous_args = 0
 109 0000 30B5     		push	{r4, r5, lr}
 110 0002 83B0     		sub	sp, sp, #12
 111 0004 FFF7FEFF 		bl	vPortEnterCritical
 112 0008 114B     		ldr	r3, .L22
 113 000a 1B68     		ldr	r3, [r3]
 114 000c 1BB1     		cbz	r3, .L21
 115              	.L19:
 116 000e FFF7FEFF 		bl	vPortExitCritical
 117 0012 03B0     		add	sp, sp, #12
 118              		@ sp needed
 119 0014 30BD     		pop	{r4, r5, pc}
ARM GAS  /tmp/cc9CcRC8.s 			page 3


 120              	.L21:
 121 0016 0F4D     		ldr	r5, .L22+4
 122 0018 2846     		mov	r0, r5
 123 001a FFF7FEFF 		bl	vListInitialise
 124 001e 0E4C     		ldr	r4, .L22+8
 125 0020 2046     		mov	r0, r4
 126 0022 FFF7FEFF 		bl	vListInitialise
 127 0026 0D4B     		ldr	r3, .L22+12
 128 0028 1D60     		str	r5, [r3]
 129 002a 0D4B     		ldr	r3, .L22+16
 130 002c 1C60     		str	r4, [r3]
 131 002e 0023     		movs	r3, #0
 132 0030 0093     		str	r3, [sp]
 133 0032 0C4B     		ldr	r3, .L22+20
 134 0034 0C4A     		ldr	r2, .L22+24
 135 0036 1021     		movs	r1, #16
 136 0038 0A20     		movs	r0, #10
 137 003a FFF7FEFF 		bl	xQueueGenericCreateStatic
 138 003e 044B     		ldr	r3, .L22
 139 0040 1860     		str	r0, [r3]
 140 0042 0028     		cmp	r0, #0
 141 0044 E3D0     		beq	.L19
 142 0046 0949     		ldr	r1, .L22+28
 143 0048 FFF7FEFF 		bl	vQueueAddToRegistry
 144 004c DFE7     		b	.L19
 145              	.L23:
 146 004e 00BF     		.align	2
 147              	.L22:
 148 0050 00000000 		.word	.LANCHOR2
 149 0054 00000000 		.word	.LANCHOR3
 150 0058 00000000 		.word	.LANCHOR4
 151 005c 00000000 		.word	.LANCHOR0
 152 0060 00000000 		.word	.LANCHOR1
 153 0064 00000000 		.word	.LANCHOR5
 154 0068 00000000 		.word	.LANCHOR6
 155 006c 00000000 		.word	.LC0
 157              		.section	.text.prvInitialiseNewTimer,"ax",%progbits
 158              		.align	1
 159              		.syntax unified
 160              		.thumb
 161              		.thumb_func
 162              		.fpu fpv4-sp-d16
 164              	prvInitialiseNewTimer:
 165              		@ args = 8, pretend = 0, frame = 0
 166              		@ frame_needed = 0, uses_anonymous_args = 0
 167 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 168 0004 079C     		ldr	r4, [sp, #28]
 169 0006 ACB1     		cbz	r4, .L24
 170 0008 1E46     		mov	r6, r3
 171 000a 1546     		mov	r5, r2
 172 000c 0F46     		mov	r7, r1
 173 000e 8046     		mov	r8, r0
 174 0010 FFF7FEFF 		bl	prvCheckForValidListAndQueue
 175 0014 C4F80080 		str	r8, [r4]
 176 0018 A761     		str	r7, [r4, #24]
 177 001a E661     		str	r6, [r4, #28]
 178 001c 069B     		ldr	r3, [sp, #24]
ARM GAS  /tmp/cc9CcRC8.s 			page 4


 179 001e 2362     		str	r3, [r4, #32]
 180 0020 201D     		adds	r0, r4, #4
 181 0022 FFF7FEFF 		bl	vListInitialiseItem
 182 0026 2DB1     		cbz	r5, .L24
 183 0028 94F82830 		ldrb	r3, [r4, #40]	@ zero_extendqisi2
 184 002c 43F00403 		orr	r3, r3, #4
 185 0030 84F82830 		strb	r3, [r4, #40]
 186              	.L24:
 187 0034 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 189              		.section	.text.xTimerCreateTimerTask,"ax",%progbits
 190              		.align	1
 191              		.global	xTimerCreateTimerTask
 192              		.syntax unified
 193              		.thumb
 194              		.thumb_func
 195              		.fpu fpv4-sp-d16
 197              	xTimerCreateTimerTask:
 198              		@ args = 0, pretend = 0, frame = 16
 199              		@ frame_needed = 0, uses_anonymous_args = 0
 200 0000 10B5     		push	{r4, lr}
 201 0002 88B0     		sub	sp, sp, #32
 202 0004 FFF7FEFF 		bl	prvCheckForValidListAndQueue
 203 0008 104B     		ldr	r3, .L34
 204 000a 1B68     		ldr	r3, [r3]
 205 000c D3B1     		cbz	r3, .L30
 206 000e 0024     		movs	r4, #0
 207 0010 0594     		str	r4, [sp, #20]
 208 0012 0694     		str	r4, [sp, #24]
 209 0014 07AA     		add	r2, sp, #28
 210 0016 06A9     		add	r1, sp, #24
 211 0018 05A8     		add	r0, sp, #20
 212 001a FFF7FEFF 		bl	vApplicationGetTimerTaskMemory
 213 001e 059B     		ldr	r3, [sp, #20]
 214 0020 0293     		str	r3, [sp, #8]
 215 0022 069B     		ldr	r3, [sp, #24]
 216 0024 0193     		str	r3, [sp, #4]
 217 0026 0223     		movs	r3, #2
 218 0028 0093     		str	r3, [sp]
 219 002a 2346     		mov	r3, r4
 220 002c 079A     		ldr	r2, [sp, #28]
 221 002e 0849     		ldr	r1, .L34+4
 222 0030 0848     		ldr	r0, .L34+8
 223 0032 FFF7FEFF 		bl	xTaskCreateStatic
 224 0036 084B     		ldr	r3, .L34+12
 225 0038 1860     		str	r0, [r3]
 226 003a 08B1     		cbz	r0, .L33
 227 003c 0120     		movs	r0, #1
 228 003e 02E0     		b	.L27
 229              	.L33:
 230 0040 2046     		mov	r0, r4
 231 0042 00E0     		b	.L27
 232              	.L30:
 233 0044 0020     		movs	r0, #0
 234              	.L27:
 235 0046 08B0     		add	sp, sp, #32
 236              		@ sp needed
 237 0048 10BD     		pop	{r4, pc}
ARM GAS  /tmp/cc9CcRC8.s 			page 5


 238              	.L35:
 239 004a 00BF     		.align	2
 240              	.L34:
 241 004c 00000000 		.word	.LANCHOR2
 242 0050 00000000 		.word	.LC1
 243 0054 00000000 		.word	prvTimerTask
 244 0058 00000000 		.word	.LANCHOR7
 246              		.section	.text.xTimerCreate,"ax",%progbits
 247              		.align	1
 248              		.global	xTimerCreate
 249              		.syntax unified
 250              		.thumb
 251              		.thumb_func
 252              		.fpu fpv4-sp-d16
 254              	xTimerCreate:
 255              		@ args = 4, pretend = 0, frame = 0
 256              		@ frame_needed = 0, uses_anonymous_args = 0
 257 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 258 0004 82B0     		sub	sp, sp, #8
 259 0006 0546     		mov	r5, r0
 260 0008 0E46     		mov	r6, r1
 261 000a 1746     		mov	r7, r2
 262 000c 9846     		mov	r8, r3
 263 000e 2C20     		movs	r0, #44
 264 0010 FFF7FEFF 		bl	pvPortMalloc
 265 0014 0446     		mov	r4, r0
 266 0016 58B1     		cbz	r0, .L36
 267 0018 0023     		movs	r3, #0
 268 001a 80F82830 		strb	r3, [r0, #40]
 269 001e 0190     		str	r0, [sp, #4]
 270 0020 089B     		ldr	r3, [sp, #32]
 271 0022 0093     		str	r3, [sp]
 272 0024 4346     		mov	r3, r8
 273 0026 3A46     		mov	r2, r7
 274 0028 3146     		mov	r1, r6
 275 002a 2846     		mov	r0, r5
 276 002c FFF7FEFF 		bl	prvInitialiseNewTimer
 277              	.L36:
 278 0030 2046     		mov	r0, r4
 279 0032 02B0     		add	sp, sp, #8
 280              		@ sp needed
 281 0034 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 283              		.section	.text.xTimerCreateStatic,"ax",%progbits
 284              		.align	1
 285              		.global	xTimerCreateStatic
 286              		.syntax unified
 287              		.thumb
 288              		.thumb_func
 289              		.fpu fpv4-sp-d16
 291              	xTimerCreateStatic:
 292              		@ args = 8, pretend = 0, frame = 8
 293              		@ frame_needed = 0, uses_anonymous_args = 0
 294 0000 30B5     		push	{r4, r5, lr}
 295 0002 85B0     		sub	sp, sp, #20
 296 0004 099C     		ldr	r4, [sp, #36]
 297 0006 2C25     		movs	r5, #44
 298 0008 0395     		str	r5, [sp, #12]
ARM GAS  /tmp/cc9CcRC8.s 			page 6


 299 000a 039D     		ldr	r5, [sp, #12]
 300 000c 3CB1     		cbz	r4, .L40
 301 000e 0225     		movs	r5, #2
 302 0010 84F82850 		strb	r5, [r4, #40]
 303 0014 0194     		str	r4, [sp, #4]
 304 0016 089D     		ldr	r5, [sp, #32]
 305 0018 0095     		str	r5, [sp]
 306 001a FFF7FEFF 		bl	prvInitialiseNewTimer
 307              	.L40:
 308 001e 2046     		mov	r0, r4
 309 0020 05B0     		add	sp, sp, #20
 310              		@ sp needed
 311 0022 30BD     		pop	{r4, r5, pc}
 313              		.section	.text.xTimerGenericCommand,"ax",%progbits
 314              		.align	1
 315              		.global	xTimerGenericCommand
 316              		.syntax unified
 317              		.thumb
 318              		.thumb_func
 319              		.fpu fpv4-sp-d16
 321              	xTimerGenericCommand:
 322              		@ args = 4, pretend = 0, frame = 16
 323              		@ frame_needed = 0, uses_anonymous_args = 0
 324 0000 30B5     		push	{r4, r5, lr}
 325 0002 85B0     		sub	sp, sp, #20
 326 0004 134C     		ldr	r4, .L49
 327 0006 2568     		ldr	r5, [r4]
 328 0008 0DB3     		cbz	r5, .L46
 329 000a 1C46     		mov	r4, r3
 330 000c 0091     		str	r1, [sp]
 331 000e 0192     		str	r2, [sp, #4]
 332 0010 0290     		str	r0, [sp, #8]
 333 0012 0529     		cmp	r1, #5
 334 0014 13DC     		bgt	.L44
 335 0016 FFF7FEFF 		bl	xTaskGetSchedulerState
 336 001a 0228     		cmp	r0, #2
 337 001c 07D0     		beq	.L48
 338 001e 0023     		movs	r3, #0
 339 0020 1A46     		mov	r2, r3
 340 0022 6946     		mov	r1, sp
 341 0024 0B48     		ldr	r0, .L49
 342 0026 0068     		ldr	r0, [r0]
 343 0028 FFF7FEFF 		bl	xQueueGenericSend
 344 002c 0DE0     		b	.L42
 345              	.L48:
 346 002e 0023     		movs	r3, #0
 347 0030 089A     		ldr	r2, [sp, #32]
 348 0032 6946     		mov	r1, sp
 349 0034 0748     		ldr	r0, .L49
 350 0036 0068     		ldr	r0, [r0]
 351 0038 FFF7FEFF 		bl	xQueueGenericSend
 352 003c 05E0     		b	.L42
 353              	.L44:
 354 003e 0023     		movs	r3, #0
 355 0040 2246     		mov	r2, r4
 356 0042 6946     		mov	r1, sp
 357 0044 2846     		mov	r0, r5
ARM GAS  /tmp/cc9CcRC8.s 			page 7


 358 0046 FFF7FEFF 		bl	xQueueGenericSendFromISR
 359              	.L42:
 360 004a 05B0     		add	sp, sp, #20
 361              		@ sp needed
 362 004c 30BD     		pop	{r4, r5, pc}
 363              	.L46:
 364 004e 0020     		movs	r0, #0
 365 0050 FBE7     		b	.L42
 366              	.L50:
 367 0052 00BF     		.align	2
 368              	.L49:
 369 0054 00000000 		.word	.LANCHOR2
 371              		.section	.text.prvSwitchTimerLists,"ax",%progbits
 372              		.align	1
 373              		.syntax unified
 374              		.thumb
 375              		.thumb_func
 376              		.fpu fpv4-sp-d16
 378              	prvSwitchTimerLists:
 379              		@ args = 0, pretend = 0, frame = 0
 380              		@ frame_needed = 0, uses_anonymous_args = 0
 381 0000 70B5     		push	{r4, r5, r6, lr}
 382 0002 82B0     		sub	sp, sp, #8
 383              	.L53:
 384 0004 164B     		ldr	r3, .L59
 385 0006 1B68     		ldr	r3, [r3]
 386 0008 1A68     		ldr	r2, [r3]
 387 000a 12B3     		cbz	r2, .L58
 388 000c DB68     		ldr	r3, [r3, #12]
 389 000e 1E68     		ldr	r6, [r3]
 390 0010 DC68     		ldr	r4, [r3, #12]
 391 0012 251D     		adds	r5, r4, #4
 392 0014 2846     		mov	r0, r5
 393 0016 FFF7FEFF 		bl	uxListRemove
 394 001a 236A     		ldr	r3, [r4, #32]
 395 001c 2046     		mov	r0, r4
 396 001e 9847     		blx	r3
 397 0020 94F82830 		ldrb	r3, [r4, #40]	@ zero_extendqisi2
 398 0024 13F0040F 		tst	r3, #4
 399 0028 ECD0     		beq	.L53
 400 002a A369     		ldr	r3, [r4, #24]
 401 002c 3344     		add	r3, r3, r6
 402 002e 9E42     		cmp	r6, r3
 403 0030 07D2     		bcs	.L54
 404 0032 6360     		str	r3, [r4, #4]
 405 0034 2461     		str	r4, [r4, #16]
 406 0036 2946     		mov	r1, r5
 407 0038 094B     		ldr	r3, .L59
 408 003a 1868     		ldr	r0, [r3]
 409 003c FFF7FEFF 		bl	vListInsert
 410 0040 E0E7     		b	.L53
 411              	.L54:
 412 0042 0021     		movs	r1, #0
 413 0044 0091     		str	r1, [sp]
 414 0046 0B46     		mov	r3, r1
 415 0048 3246     		mov	r2, r6
 416 004a 2046     		mov	r0, r4
ARM GAS  /tmp/cc9CcRC8.s 			page 8


 417 004c FFF7FEFF 		bl	xTimerGenericCommand
 418 0050 D8E7     		b	.L53
 419              	.L58:
 420 0052 044A     		ldr	r2, .L59+4
 421 0054 1068     		ldr	r0, [r2]
 422 0056 0249     		ldr	r1, .L59
 423 0058 0860     		str	r0, [r1]
 424 005a 1360     		str	r3, [r2]
 425 005c 02B0     		add	sp, sp, #8
 426              		@ sp needed
 427 005e 70BD     		pop	{r4, r5, r6, pc}
 428              	.L60:
 429              		.align	2
 430              	.L59:
 431 0060 00000000 		.word	.LANCHOR0
 432 0064 00000000 		.word	.LANCHOR1
 434              		.section	.text.prvSampleTimeNow,"ax",%progbits
 435              		.align	1
 436              		.syntax unified
 437              		.thumb
 438              		.thumb_func
 439              		.fpu fpv4-sp-d16
 441              	prvSampleTimeNow:
 442              		@ args = 0, pretend = 0, frame = 0
 443              		@ frame_needed = 0, uses_anonymous_args = 0
 444 0000 38B5     		push	{r3, r4, r5, lr}
 445 0002 0546     		mov	r5, r0
 446 0004 FFF7FEFF 		bl	xTaskGetTickCount
 447 0008 0446     		mov	r4, r0
 448 000a 074B     		ldr	r3, .L66
 449 000c 1B68     		ldr	r3, [r3]
 450 000e 8342     		cmp	r3, r0
 451 0010 05D8     		bhi	.L65
 452 0012 0023     		movs	r3, #0
 453 0014 2B60     		str	r3, [r5]
 454              	.L63:
 455 0016 044B     		ldr	r3, .L66
 456 0018 1C60     		str	r4, [r3]
 457 001a 2046     		mov	r0, r4
 458 001c 38BD     		pop	{r3, r4, r5, pc}
 459              	.L65:
 460 001e FFF7FEFF 		bl	prvSwitchTimerLists
 461 0022 0123     		movs	r3, #1
 462 0024 2B60     		str	r3, [r5]
 463 0026 F6E7     		b	.L63
 464              	.L67:
 465              		.align	2
 466              	.L66:
 467 0028 00000000 		.word	.LANCHOR8
 469              		.section	.text.prvProcessExpiredTimer,"ax",%progbits
 470              		.align	1
 471              		.syntax unified
 472              		.thumb
 473              		.thumb_func
 474              		.fpu fpv4-sp-d16
 476              	prvProcessExpiredTimer:
 477              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/cc9CcRC8.s 			page 9


 478              		@ frame_needed = 0, uses_anonymous_args = 0
 479 0000 70B5     		push	{r4, r5, r6, lr}
 480 0002 82B0     		sub	sp, sp, #8
 481 0004 0546     		mov	r5, r0
 482 0006 0E46     		mov	r6, r1
 483 0008 124B     		ldr	r3, .L73
 484 000a 1B68     		ldr	r3, [r3]
 485 000c DB68     		ldr	r3, [r3, #12]
 486 000e DC68     		ldr	r4, [r3, #12]
 487 0010 201D     		adds	r0, r4, #4
 488 0012 FFF7FEFF 		bl	uxListRemove
 489 0016 94F82830 		ldrb	r3, [r4, #40]	@ zero_extendqisi2
 490 001a 13F0040F 		tst	r3, #4
 491 001e 08D1     		bne	.L72
 492 0020 23F00103 		bic	r3, r3, #1
 493 0024 84F82830 		strb	r3, [r4, #40]
 494              	.L70:
 495 0028 236A     		ldr	r3, [r4, #32]
 496 002a 2046     		mov	r0, r4
 497 002c 9847     		blx	r3
 498 002e 02B0     		add	sp, sp, #8
 499              		@ sp needed
 500 0030 70BD     		pop	{r4, r5, r6, pc}
 501              	.L72:
 502 0032 A169     		ldr	r1, [r4, #24]
 503 0034 2B46     		mov	r3, r5
 504 0036 3246     		mov	r2, r6
 505 0038 2944     		add	r1, r1, r5
 506 003a 2046     		mov	r0, r4
 507 003c FFF7FEFF 		bl	prvInsertTimerInActiveList
 508 0040 0028     		cmp	r0, #0
 509 0042 F1D0     		beq	.L70
 510 0044 0021     		movs	r1, #0
 511 0046 0091     		str	r1, [sp]
 512 0048 0B46     		mov	r3, r1
 513 004a 2A46     		mov	r2, r5
 514 004c 2046     		mov	r0, r4
 515 004e FFF7FEFF 		bl	xTimerGenericCommand
 516 0052 E9E7     		b	.L70
 517              	.L74:
 518              		.align	2
 519              	.L73:
 520 0054 00000000 		.word	.LANCHOR0
 522              		.section	.text.prvProcessTimerOrBlockTask,"ax",%progbits
 523              		.align	1
 524              		.syntax unified
 525              		.thumb
 526              		.thumb_func
 527              		.fpu fpv4-sp-d16
 529              	prvProcessTimerOrBlockTask:
 530              		@ args = 0, pretend = 0, frame = 8
 531              		@ frame_needed = 0, uses_anonymous_args = 0
 532 0000 70B5     		push	{r4, r5, r6, lr}
 533 0002 82B0     		sub	sp, sp, #8
 534 0004 0646     		mov	r6, r0
 535 0006 0C46     		mov	r4, r1
 536 0008 FFF7FEFF 		bl	vTaskSuspendAll
ARM GAS  /tmp/cc9CcRC8.s 			page 10


 537 000c 01A8     		add	r0, sp, #4
 538 000e FFF7FEFF 		bl	prvSampleTimeNow
 539 0012 019B     		ldr	r3, [sp, #4]
 540 0014 23BB     		cbnz	r3, .L76
 541 0016 0546     		mov	r5, r0
 542 0018 0CB9     		cbnz	r4, .L77
 543 001a B042     		cmp	r0, r6
 544 001c 17D2     		bcs	.L82
 545              	.L77:
 546 001e 24B1     		cbz	r4, .L79
 547 0020 114A     		ldr	r2, .L83
 548 0022 1268     		ldr	r2, [r2]
 549 0024 1268     		ldr	r2, [r2]
 550 0026 CAB9     		cbnz	r2, .L80
 551 0028 0124     		movs	r4, #1
 552              	.L79:
 553 002a 2246     		mov	r2, r4
 554 002c 711B     		subs	r1, r6, r5
 555 002e 0F4B     		ldr	r3, .L83+4
 556 0030 1868     		ldr	r0, [r3]
 557 0032 FFF7FEFF 		bl	vQueueWaitForMessageRestricted
 558 0036 FFF7FEFF 		bl	xTaskResumeAll
 559 003a 98B9     		cbnz	r0, .L75
 560 003c 0C4B     		ldr	r3, .L83+8
 561 003e 4FF08052 		mov	r2, #268435456
 562 0042 1A60     		str	r2, [r3]
 563              		.syntax unified
 564              	@ 603 "Middlewares/Third_Party/FreeRTOS/Source/timers.c" 1
 565 0044 BFF34F8F 		dsb
 566              	@ 0 "" 2
 567              	@ 603 "Middlewares/Third_Party/FreeRTOS/Source/timers.c" 1
 568 0048 BFF36F8F 		isb
 569              	@ 0 "" 2
 570              		.thumb
 571              		.syntax unified
 572 004c 0AE0     		b	.L75
 573              	.L82:
 574 004e FFF7FEFF 		bl	xTaskResumeAll
 575 0052 2946     		mov	r1, r5
 576 0054 3046     		mov	r0, r6
 577 0056 FFF7FEFF 		bl	prvProcessExpiredTimer
 578 005a 03E0     		b	.L75
 579              	.L80:
 580 005c 1C46     		mov	r4, r3
 581 005e E4E7     		b	.L79
 582              	.L76:
 583 0060 FFF7FEFF 		bl	xTaskResumeAll
 584              	.L75:
 585 0064 02B0     		add	sp, sp, #8
 586              		@ sp needed
 587 0066 70BD     		pop	{r4, r5, r6, pc}
 588              	.L84:
 589              		.align	2
 590              	.L83:
 591 0068 00000000 		.word	.LANCHOR1
 592 006c 00000000 		.word	.LANCHOR2
 593 0070 04ED00E0 		.word	-536810236
ARM GAS  /tmp/cc9CcRC8.s 			page 11


 595              		.section	.text.prvProcessReceivedCommands,"ax",%progbits
 596              		.align	1
 597              		.syntax unified
 598              		.thumb
 599              		.thumb_func
 600              		.fpu fpv4-sp-d16
 602              	prvProcessReceivedCommands:
 603              		@ args = 0, pretend = 0, frame = 24
 604              		@ frame_needed = 0, uses_anonymous_args = 0
 605 0000 30B5     		push	{r4, r5, lr}
 606 0002 89B0     		sub	sp, sp, #36
 607 0004 06E0     		b	.L88
 608              	.L102:
 609 0006 0799     		ldr	r1, [sp, #28]
 610 0008 0698     		ldr	r0, [sp, #24]
 611 000a 059B     		ldr	r3, [sp, #20]
 612 000c 9847     		blx	r3
 613              	.L87:
 614 000e 049B     		ldr	r3, [sp, #16]
 615 0010 002B     		cmp	r3, #0
 616 0012 0BDA     		bge	.L100
 617              	.L88:
 618 0014 0022     		movs	r2, #0
 619 0016 04A9     		add	r1, sp, #16
 620 0018 324B     		ldr	r3, .L104
 621 001a 1868     		ldr	r0, [r3]
 622 001c FFF7FEFF 		bl	xQueueReceive
 623 0020 0028     		cmp	r0, #0
 624 0022 5CD0     		beq	.L101
 625 0024 049B     		ldr	r3, [sp, #16]
 626 0026 002B     		cmp	r3, #0
 627 0028 F1DA     		bge	.L87
 628 002a ECE7     		b	.L102
 629              	.L100:
 630 002c 069C     		ldr	r4, [sp, #24]
 631 002e 6369     		ldr	r3, [r4, #20]
 632 0030 13B1     		cbz	r3, .L89
 633 0032 201D     		adds	r0, r4, #4
 634 0034 FFF7FEFF 		bl	uxListRemove
 635              	.L89:
 636 0038 03A8     		add	r0, sp, #12
 637 003a FFF7FEFF 		bl	prvSampleTimeNow
 638 003e 049B     		ldr	r3, [sp, #16]
 639 0040 092B     		cmp	r3, #9
 640 0042 E7D8     		bhi	.L88
 641 0044 DFE803F0 		tbb	[pc, r3]
 642              	.L92:
 643 0048 05       		.byte	(.L94-.L92)/2
 644 0049 05       		.byte	(.L94-.L92)/2
 645 004a 05       		.byte	(.L94-.L92)/2
 646 004b 27       		.byte	(.L93-.L92)/2
 647 004c 2E       		.byte	(.L91-.L92)/2
 648 004d 3D       		.byte	(.L95-.L92)/2
 649 004e 05       		.byte	(.L94-.L92)/2
 650 004f 05       		.byte	(.L94-.L92)/2
 651 0050 27       		.byte	(.L93-.L92)/2
 652 0051 2E       		.byte	(.L91-.L92)/2
ARM GAS  /tmp/cc9CcRC8.s 			page 12


 653              		.p2align 1
 654              	.L94:
 655 0052 94F82830 		ldrb	r3, [r4, #40]	@ zero_extendqisi2
 656 0056 43F00103 		orr	r3, r3, #1
 657 005a 84F82830 		strb	r3, [r4, #40]
 658 005e 0599     		ldr	r1, [sp, #20]
 659 0060 A569     		ldr	r5, [r4, #24]
 660 0062 0B46     		mov	r3, r1
 661 0064 0246     		mov	r2, r0
 662 0066 2944     		add	r1, r1, r5
 663 0068 2046     		mov	r0, r4
 664 006a FFF7FEFF 		bl	prvInsertTimerInActiveList
 665 006e 0028     		cmp	r0, #0
 666 0070 D0D0     		beq	.L88
 667 0072 236A     		ldr	r3, [r4, #32]
 668 0074 2046     		mov	r0, r4
 669 0076 9847     		blx	r3
 670 0078 94F82830 		ldrb	r3, [r4, #40]	@ zero_extendqisi2
 671 007c 13F0040F 		tst	r3, #4
 672 0080 C8D0     		beq	.L88
 673 0082 A269     		ldr	r2, [r4, #24]
 674 0084 0021     		movs	r1, #0
 675 0086 0091     		str	r1, [sp]
 676 0088 0B46     		mov	r3, r1
 677 008a 0598     		ldr	r0, [sp, #20]
 678 008c 0244     		add	r2, r2, r0
 679 008e 2046     		mov	r0, r4
 680 0090 FFF7FEFF 		bl	xTimerGenericCommand
 681 0094 BEE7     		b	.L88
 682              	.L93:
 683 0096 94F82830 		ldrb	r3, [r4, #40]	@ zero_extendqisi2
 684 009a 23F00103 		bic	r3, r3, #1
 685 009e 84F82830 		strb	r3, [r4, #40]
 686 00a2 B7E7     		b	.L88
 687              	.L91:
 688 00a4 94F82830 		ldrb	r3, [r4, #40]	@ zero_extendqisi2
 689 00a8 43F00103 		orr	r3, r3, #1
 690 00ac 84F82830 		strb	r3, [r4, #40]
 691 00b0 0599     		ldr	r1, [sp, #20]
 692 00b2 A161     		str	r1, [r4, #24]
 693 00b4 0346     		mov	r3, r0
 694 00b6 0246     		mov	r2, r0
 695 00b8 0144     		add	r1, r1, r0
 696 00ba 2046     		mov	r0, r4
 697 00bc FFF7FEFF 		bl	prvInsertTimerInActiveList
 698 00c0 A8E7     		b	.L88
 699              	.L95:
 700 00c2 94F82830 		ldrb	r3, [r4, #40]	@ zero_extendqisi2
 701 00c6 13F0020F 		tst	r3, #2
 702 00ca 04D0     		beq	.L103
 703 00cc 23F00103 		bic	r3, r3, #1
 704 00d0 84F82830 		strb	r3, [r4, #40]
 705 00d4 9EE7     		b	.L88
 706              	.L103:
 707 00d6 2046     		mov	r0, r4
 708 00d8 FFF7FEFF 		bl	vPortFree
 709 00dc 9AE7     		b	.L88
ARM GAS  /tmp/cc9CcRC8.s 			page 13


 710              	.L101:
 711 00de 09B0     		add	sp, sp, #36
 712              		@ sp needed
 713 00e0 30BD     		pop	{r4, r5, pc}
 714              	.L105:
 715 00e2 00BF     		.align	2
 716              	.L104:
 717 00e4 00000000 		.word	.LANCHOR2
 719              		.section	.text.prvTimerTask,"ax",%progbits
 720              		.align	1
 721              		.syntax unified
 722              		.thumb
 723              		.thumb_func
 724              		.fpu fpv4-sp-d16
 726              	prvTimerTask:
 727              		@ args = 0, pretend = 0, frame = 8
 728              		@ frame_needed = 0, uses_anonymous_args = 0
 729 0000 00B5     		push	{lr}
 730 0002 83B0     		sub	sp, sp, #12
 731              	.L107:
 732 0004 01A8     		add	r0, sp, #4
 733 0006 FFF7FEFF 		bl	prvGetNextExpireTime
 734 000a 0199     		ldr	r1, [sp, #4]
 735 000c FFF7FEFF 		bl	prvProcessTimerOrBlockTask
 736 0010 FFF7FEFF 		bl	prvProcessReceivedCommands
 737 0014 F6E7     		b	.L107
 739              		.section	.text.xTimerGetTimerDaemonTaskHandle,"ax",%progbits
 740              		.align	1
 741              		.global	xTimerGetTimerDaemonTaskHandle
 742              		.syntax unified
 743              		.thumb
 744              		.thumb_func
 745              		.fpu fpv4-sp-d16
 747              	xTimerGetTimerDaemonTaskHandle:
 748              		@ args = 0, pretend = 0, frame = 0
 749              		@ frame_needed = 0, uses_anonymous_args = 0
 750              		@ link register save eliminated.
 751 0000 014B     		ldr	r3, .L110
 752 0002 1868     		ldr	r0, [r3]
 753 0004 7047     		bx	lr
 754              	.L111:
 755 0006 00BF     		.align	2
 756              	.L110:
 757 0008 00000000 		.word	.LANCHOR7
 759              		.section	.text.xTimerGetPeriod,"ax",%progbits
 760              		.align	1
 761              		.global	xTimerGetPeriod
 762              		.syntax unified
 763              		.thumb
 764              		.thumb_func
 765              		.fpu fpv4-sp-d16
 767              	xTimerGetPeriod:
 768              		@ args = 0, pretend = 0, frame = 0
 769              		@ frame_needed = 0, uses_anonymous_args = 0
 770              		@ link register save eliminated.
 771 0000 8069     		ldr	r0, [r0, #24]
 772 0002 7047     		bx	lr
ARM GAS  /tmp/cc9CcRC8.s 			page 14


 774              		.section	.text.vTimerSetReloadMode,"ax",%progbits
 775              		.align	1
 776              		.global	vTimerSetReloadMode
 777              		.syntax unified
 778              		.thumb
 779              		.thumb_func
 780              		.fpu fpv4-sp-d16
 782              	vTimerSetReloadMode:
 783              		@ args = 0, pretend = 0, frame = 0
 784              		@ frame_needed = 0, uses_anonymous_args = 0
 785 0000 38B5     		push	{r3, r4, r5, lr}
 786 0002 0446     		mov	r4, r0
 787 0004 0D46     		mov	r5, r1
 788 0006 FFF7FEFF 		bl	vPortEnterCritical
 789 000a 45B1     		cbz	r5, .L114
 790 000c 94F82830 		ldrb	r3, [r4, #40]	@ zero_extendqisi2
 791 0010 43F00403 		orr	r3, r3, #4
 792 0014 84F82830 		strb	r3, [r4, #40]
 793              	.L115:
 794 0018 FFF7FEFF 		bl	vPortExitCritical
 795 001c 38BD     		pop	{r3, r4, r5, pc}
 796              	.L114:
 797 001e 94F82830 		ldrb	r3, [r4, #40]	@ zero_extendqisi2
 798 0022 23F00403 		bic	r3, r3, #4
 799 0026 84F82830 		strb	r3, [r4, #40]
 800 002a F5E7     		b	.L115
 802              		.section	.text.xTimerGetExpiryTime,"ax",%progbits
 803              		.align	1
 804              		.global	xTimerGetExpiryTime
 805              		.syntax unified
 806              		.thumb
 807              		.thumb_func
 808              		.fpu fpv4-sp-d16
 810              	xTimerGetExpiryTime:
 811              		@ args = 0, pretend = 0, frame = 0
 812              		@ frame_needed = 0, uses_anonymous_args = 0
 813              		@ link register save eliminated.
 814 0000 4068     		ldr	r0, [r0, #4]
 815 0002 7047     		bx	lr
 817              		.section	.text.pcTimerGetName,"ax",%progbits
 818              		.align	1
 819              		.global	pcTimerGetName
 820              		.syntax unified
 821              		.thumb
 822              		.thumb_func
 823              		.fpu fpv4-sp-d16
 825              	pcTimerGetName:
 826              		@ args = 0, pretend = 0, frame = 0
 827              		@ frame_needed = 0, uses_anonymous_args = 0
 828              		@ link register save eliminated.
 829 0000 0068     		ldr	r0, [r0]
 830 0002 7047     		bx	lr
 832              		.section	.text.xTimerIsTimerActive,"ax",%progbits
 833              		.align	1
 834              		.global	xTimerIsTimerActive
 835              		.syntax unified
 836              		.thumb
ARM GAS  /tmp/cc9CcRC8.s 			page 15


 837              		.thumb_func
 838              		.fpu fpv4-sp-d16
 840              	xTimerIsTimerActive:
 841              		@ args = 0, pretend = 0, frame = 0
 842              		@ frame_needed = 0, uses_anonymous_args = 0
 843 0000 10B5     		push	{r4, lr}
 844 0002 0446     		mov	r4, r0
 845 0004 FFF7FEFF 		bl	vPortEnterCritical
 846 0008 94F82830 		ldrb	r3, [r4, #40]	@ zero_extendqisi2
 847 000c 13F0010F 		tst	r3, #1
 848 0010 04D1     		bne	.L121
 849 0012 0024     		movs	r4, #0
 850              	.L120:
 851 0014 FFF7FEFF 		bl	vPortExitCritical
 852 0018 2046     		mov	r0, r4
 853 001a 10BD     		pop	{r4, pc}
 854              	.L121:
 855 001c 0124     		movs	r4, #1
 856 001e F9E7     		b	.L120
 858              		.section	.text.pvTimerGetTimerID,"ax",%progbits
 859              		.align	1
 860              		.global	pvTimerGetTimerID
 861              		.syntax unified
 862              		.thumb
 863              		.thumb_func
 864              		.fpu fpv4-sp-d16
 866              	pvTimerGetTimerID:
 867              		@ args = 0, pretend = 0, frame = 0
 868              		@ frame_needed = 0, uses_anonymous_args = 0
 869 0000 10B5     		push	{r4, lr}
 870 0002 0446     		mov	r4, r0
 871 0004 FFF7FEFF 		bl	vPortEnterCritical
 872 0008 E469     		ldr	r4, [r4, #28]
 873 000a FFF7FEFF 		bl	vPortExitCritical
 874 000e 2046     		mov	r0, r4
 875 0010 10BD     		pop	{r4, pc}
 877              		.section	.text.vTimerSetTimerID,"ax",%progbits
 878              		.align	1
 879              		.global	vTimerSetTimerID
 880              		.syntax unified
 881              		.thumb
 882              		.thumb_func
 883              		.fpu fpv4-sp-d16
 885              	vTimerSetTimerID:
 886              		@ args = 0, pretend = 0, frame = 0
 887              		@ frame_needed = 0, uses_anonymous_args = 0
 888 0000 38B5     		push	{r3, r4, r5, lr}
 889 0002 0446     		mov	r4, r0
 890 0004 0D46     		mov	r5, r1
 891 0006 FFF7FEFF 		bl	vPortEnterCritical
 892 000a E561     		str	r5, [r4, #28]
 893 000c FFF7FEFF 		bl	vPortExitCritical
 894 0010 38BD     		pop	{r3, r4, r5, pc}
 896              		.section	.text.xTimerPendFunctionCallFromISR,"ax",%progbits
 897              		.align	1
 898              		.global	xTimerPendFunctionCallFromISR
 899              		.syntax unified
ARM GAS  /tmp/cc9CcRC8.s 			page 16


 900              		.thumb
 901              		.thumb_func
 902              		.fpu fpv4-sp-d16
 904              	xTimerPendFunctionCallFromISR:
 905              		@ args = 0, pretend = 0, frame = 16
 906              		@ frame_needed = 0, uses_anonymous_args = 0
 907 0000 10B5     		push	{r4, lr}
 908 0002 84B0     		sub	sp, sp, #16
 909 0004 1C46     		mov	r4, r3
 910 0006 6FF00103 		mvn	r3, #1
 911 000a 0093     		str	r3, [sp]
 912 000c 0190     		str	r0, [sp, #4]
 913 000e 0291     		str	r1, [sp, #8]
 914 0010 0392     		str	r2, [sp, #12]
 915 0012 0023     		movs	r3, #0
 916 0014 2246     		mov	r2, r4
 917 0016 6946     		mov	r1, sp
 918 0018 0248     		ldr	r0, .L129
 919 001a 0068     		ldr	r0, [r0]
 920 001c FFF7FEFF 		bl	xQueueGenericSendFromISR
 921 0020 04B0     		add	sp, sp, #16
 922              		@ sp needed
 923 0022 10BD     		pop	{r4, pc}
 924              	.L130:
 925              		.align	2
 926              	.L129:
 927 0024 00000000 		.word	.LANCHOR2
 929              		.section	.text.xTimerPendFunctionCall,"ax",%progbits
 930              		.align	1
 931              		.global	xTimerPendFunctionCall
 932              		.syntax unified
 933              		.thumb
 934              		.thumb_func
 935              		.fpu fpv4-sp-d16
 937              	xTimerPendFunctionCall:
 938              		@ args = 0, pretend = 0, frame = 16
 939              		@ frame_needed = 0, uses_anonymous_args = 0
 940 0000 10B5     		push	{r4, lr}
 941 0002 84B0     		sub	sp, sp, #16
 942 0004 1C46     		mov	r4, r3
 943 0006 4FF0FF33 		mov	r3, #-1
 944 000a 0093     		str	r3, [sp]
 945 000c 0190     		str	r0, [sp, #4]
 946 000e 0291     		str	r1, [sp, #8]
 947 0010 0392     		str	r2, [sp, #12]
 948 0012 0023     		movs	r3, #0
 949 0014 2246     		mov	r2, r4
 950 0016 6946     		mov	r1, sp
 951 0018 0248     		ldr	r0, .L133
 952 001a 0068     		ldr	r0, [r0]
 953 001c FFF7FEFF 		bl	xQueueGenericSend
 954 0020 04B0     		add	sp, sp, #16
 955              		@ sp needed
 956 0022 10BD     		pop	{r4, pc}
 957              	.L134:
 958              		.align	2
 959              	.L133:
ARM GAS  /tmp/cc9CcRC8.s 			page 17


 960 0024 00000000 		.word	.LANCHOR2
 962              		.section	.text.uxTimerGetTimerNumber,"ax",%progbits
 963              		.align	1
 964              		.global	uxTimerGetTimerNumber
 965              		.syntax unified
 966              		.thumb
 967              		.thumb_func
 968              		.fpu fpv4-sp-d16
 970              	uxTimerGetTimerNumber:
 971              		@ args = 0, pretend = 0, frame = 0
 972              		@ frame_needed = 0, uses_anonymous_args = 0
 973              		@ link register save eliminated.
 974 0000 406A     		ldr	r0, [r0, #36]
 975 0002 7047     		bx	lr
 977              		.section	.text.vTimerSetTimerNumber,"ax",%progbits
 978              		.align	1
 979              		.global	vTimerSetTimerNumber
 980              		.syntax unified
 981              		.thumb
 982              		.thumb_func
 983              		.fpu fpv4-sp-d16
 985              	vTimerSetTimerNumber:
 986              		@ args = 0, pretend = 0, frame = 0
 987              		@ frame_needed = 0, uses_anonymous_args = 0
 988              		@ link register save eliminated.
 989 0000 4162     		str	r1, [r0, #36]
 990 0002 7047     		bx	lr
 992              		.section	.bss.pxCurrentTimerList,"aw",%nobits
 993              		.align	2
 994              		.set	.LANCHOR0,. + 0
 997              	pxCurrentTimerList:
 998 0000 00000000 		.space	4
 999              		.section	.bss.pxOverflowTimerList,"aw",%nobits
 1000              		.align	2
 1001              		.set	.LANCHOR1,. + 0
 1004              	pxOverflowTimerList:
 1005 0000 00000000 		.space	4
 1006              		.section	.bss.ucStaticTimerQueueStorage.6924,"aw",%nobits
 1007              		.align	2
 1008              		.set	.LANCHOR6,. + 0
 1011              	ucStaticTimerQueueStorage.6924:
 1012 0000 00000000 		.space	160
 1012      00000000 
 1012      00000000 
 1012      00000000 
 1012      00000000 
 1013              		.section	.bss.xActiveTimerList1,"aw",%nobits
 1014              		.align	2
 1015              		.set	.LANCHOR3,. + 0
 1018              	xActiveTimerList1:
 1019 0000 00000000 		.space	20
 1019      00000000 
 1019      00000000 
 1019      00000000 
 1019      00000000 
 1020              		.section	.bss.xActiveTimerList2,"aw",%nobits
 1021              		.align	2
ARM GAS  /tmp/cc9CcRC8.s 			page 18


 1022              		.set	.LANCHOR4,. + 0
 1025              	xActiveTimerList2:
 1026 0000 00000000 		.space	20
 1026      00000000 
 1026      00000000 
 1026      00000000 
 1026      00000000 
 1027              		.section	.bss.xLastTime.6877,"aw",%nobits
 1028              		.align	2
 1029              		.set	.LANCHOR8,. + 0
 1032              	xLastTime.6877:
 1033 0000 00000000 		.space	4
 1034              		.section	.bss.xStaticTimerQueue.6923,"aw",%nobits
 1035              		.align	2
 1036              		.set	.LANCHOR5,. + 0
 1039              	xStaticTimerQueue.6923:
 1040 0000 00000000 		.space	80
 1040      00000000 
 1040      00000000 
 1040      00000000 
 1040      00000000 
 1041              		.section	.bss.xTimerQueue,"aw",%nobits
 1042              		.align	2
 1043              		.set	.LANCHOR2,. + 0
 1046              	xTimerQueue:
 1047 0000 00000000 		.space	4
 1048              		.section	.bss.xTimerTaskHandle,"aw",%nobits
 1049              		.align	2
 1050              		.set	.LANCHOR7,. + 0
 1053              	xTimerTaskHandle:
 1054 0000 00000000 		.space	4
 1055              		.section	.rodata.prvCheckForValidListAndQueue.str1.4,"aMS",%progbits,1
 1056              		.align	2
 1057              	.LC0:
 1058 0000 546D7251 		.ascii	"TmrQ\000"
 1058      00
 1059              		.section	.rodata.xTimerCreateTimerTask.str1.4,"aMS",%progbits,1
 1060              		.align	2
 1061              	.LC1:
 1062 0000 546D7220 		.ascii	"Tmr Svc\000"
 1062      53766300 
 1063              		.ident	"GCC: (GNU Tools for Arm Embedded Processors 8-2019-q3-update) 8.3.1 20190703 (release) [gc
ARM GAS  /tmp/cc9CcRC8.s 			page 19


DEFINED SYMBOLS
                            *ABS*:0000000000000000 timers.c
     /tmp/cc9CcRC8.s:16     .text.prvGetNextExpireTime:0000000000000000 $t
     /tmp/cc9CcRC8.s:23     .text.prvGetNextExpireTime:0000000000000000 prvGetNextExpireTime
     /tmp/cc9CcRC8.s:47     .text.prvGetNextExpireTime:000000000000001c $d
     /tmp/cc9CcRC8.s:50     .text.prvInsertTimerInActiveList:0000000000000000 $t
     /tmp/cc9CcRC8.s:56     .text.prvInsertTimerInActiveList:0000000000000000 prvInsertTimerInActiveList
     /tmp/cc9CcRC8.s:96     .text.prvInsertTimerInActiveList:0000000000000040 $d
     /tmp/cc9CcRC8.s:100    .text.prvCheckForValidListAndQueue:0000000000000000 $t
     /tmp/cc9CcRC8.s:106    .text.prvCheckForValidListAndQueue:0000000000000000 prvCheckForValidListAndQueue
     /tmp/cc9CcRC8.s:148    .text.prvCheckForValidListAndQueue:0000000000000050 $d
     /tmp/cc9CcRC8.s:158    .text.prvInitialiseNewTimer:0000000000000000 $t
     /tmp/cc9CcRC8.s:164    .text.prvInitialiseNewTimer:0000000000000000 prvInitialiseNewTimer
     /tmp/cc9CcRC8.s:190    .text.xTimerCreateTimerTask:0000000000000000 $t
     /tmp/cc9CcRC8.s:197    .text.xTimerCreateTimerTask:0000000000000000 xTimerCreateTimerTask
     /tmp/cc9CcRC8.s:241    .text.xTimerCreateTimerTask:000000000000004c $d
     /tmp/cc9CcRC8.s:726    .text.prvTimerTask:0000000000000000 prvTimerTask
     /tmp/cc9CcRC8.s:247    .text.xTimerCreate:0000000000000000 $t
     /tmp/cc9CcRC8.s:254    .text.xTimerCreate:0000000000000000 xTimerCreate
     /tmp/cc9CcRC8.s:284    .text.xTimerCreateStatic:0000000000000000 $t
     /tmp/cc9CcRC8.s:291    .text.xTimerCreateStatic:0000000000000000 xTimerCreateStatic
     /tmp/cc9CcRC8.s:314    .text.xTimerGenericCommand:0000000000000000 $t
     /tmp/cc9CcRC8.s:321    .text.xTimerGenericCommand:0000000000000000 xTimerGenericCommand
     /tmp/cc9CcRC8.s:369    .text.xTimerGenericCommand:0000000000000054 $d
     /tmp/cc9CcRC8.s:372    .text.prvSwitchTimerLists:0000000000000000 $t
     /tmp/cc9CcRC8.s:378    .text.prvSwitchTimerLists:0000000000000000 prvSwitchTimerLists
     /tmp/cc9CcRC8.s:431    .text.prvSwitchTimerLists:0000000000000060 $d
     /tmp/cc9CcRC8.s:435    .text.prvSampleTimeNow:0000000000000000 $t
     /tmp/cc9CcRC8.s:441    .text.prvSampleTimeNow:0000000000000000 prvSampleTimeNow
     /tmp/cc9CcRC8.s:467    .text.prvSampleTimeNow:0000000000000028 $d
     /tmp/cc9CcRC8.s:470    .text.prvProcessExpiredTimer:0000000000000000 $t
     /tmp/cc9CcRC8.s:476    .text.prvProcessExpiredTimer:0000000000000000 prvProcessExpiredTimer
     /tmp/cc9CcRC8.s:520    .text.prvProcessExpiredTimer:0000000000000054 $d
     /tmp/cc9CcRC8.s:523    .text.prvProcessTimerOrBlockTask:0000000000000000 $t
     /tmp/cc9CcRC8.s:529    .text.prvProcessTimerOrBlockTask:0000000000000000 prvProcessTimerOrBlockTask
     /tmp/cc9CcRC8.s:591    .text.prvProcessTimerOrBlockTask:0000000000000068 $d
     /tmp/cc9CcRC8.s:596    .text.prvProcessReceivedCommands:0000000000000000 $t
     /tmp/cc9CcRC8.s:602    .text.prvProcessReceivedCommands:0000000000000000 prvProcessReceivedCommands
     /tmp/cc9CcRC8.s:643    .text.prvProcessReceivedCommands:0000000000000048 $d
     /tmp/cc9CcRC8.s:653    .text.prvProcessReceivedCommands:0000000000000052 $t
     /tmp/cc9CcRC8.s:717    .text.prvProcessReceivedCommands:00000000000000e4 $d
     /tmp/cc9CcRC8.s:720    .text.prvTimerTask:0000000000000000 $t
     /tmp/cc9CcRC8.s:740    .text.xTimerGetTimerDaemonTaskHandle:0000000000000000 $t
     /tmp/cc9CcRC8.s:747    .text.xTimerGetTimerDaemonTaskHandle:0000000000000000 xTimerGetTimerDaemonTaskHandle
     /tmp/cc9CcRC8.s:757    .text.xTimerGetTimerDaemonTaskHandle:0000000000000008 $d
     /tmp/cc9CcRC8.s:760    .text.xTimerGetPeriod:0000000000000000 $t
     /tmp/cc9CcRC8.s:767    .text.xTimerGetPeriod:0000000000000000 xTimerGetPeriod
     /tmp/cc9CcRC8.s:775    .text.vTimerSetReloadMode:0000000000000000 $t
     /tmp/cc9CcRC8.s:782    .text.vTimerSetReloadMode:0000000000000000 vTimerSetReloadMode
     /tmp/cc9CcRC8.s:803    .text.xTimerGetExpiryTime:0000000000000000 $t
     /tmp/cc9CcRC8.s:810    .text.xTimerGetExpiryTime:0000000000000000 xTimerGetExpiryTime
     /tmp/cc9CcRC8.s:818    .text.pcTimerGetName:0000000000000000 $t
     /tmp/cc9CcRC8.s:825    .text.pcTimerGetName:0000000000000000 pcTimerGetName
     /tmp/cc9CcRC8.s:833    .text.xTimerIsTimerActive:0000000000000000 $t
     /tmp/cc9CcRC8.s:840    .text.xTimerIsTimerActive:0000000000000000 xTimerIsTimerActive
     /tmp/cc9CcRC8.s:859    .text.pvTimerGetTimerID:0000000000000000 $t
     /tmp/cc9CcRC8.s:866    .text.pvTimerGetTimerID:0000000000000000 pvTimerGetTimerID
ARM GAS  /tmp/cc9CcRC8.s 			page 20


     /tmp/cc9CcRC8.s:878    .text.vTimerSetTimerID:0000000000000000 $t
     /tmp/cc9CcRC8.s:885    .text.vTimerSetTimerID:0000000000000000 vTimerSetTimerID
     /tmp/cc9CcRC8.s:897    .text.xTimerPendFunctionCallFromISR:0000000000000000 $t
     /tmp/cc9CcRC8.s:904    .text.xTimerPendFunctionCallFromISR:0000000000000000 xTimerPendFunctionCallFromISR
     /tmp/cc9CcRC8.s:927    .text.xTimerPendFunctionCallFromISR:0000000000000024 $d
     /tmp/cc9CcRC8.s:930    .text.xTimerPendFunctionCall:0000000000000000 $t
     /tmp/cc9CcRC8.s:937    .text.xTimerPendFunctionCall:0000000000000000 xTimerPendFunctionCall
     /tmp/cc9CcRC8.s:960    .text.xTimerPendFunctionCall:0000000000000024 $d
     /tmp/cc9CcRC8.s:963    .text.uxTimerGetTimerNumber:0000000000000000 $t
     /tmp/cc9CcRC8.s:970    .text.uxTimerGetTimerNumber:0000000000000000 uxTimerGetTimerNumber
     /tmp/cc9CcRC8.s:978    .text.vTimerSetTimerNumber:0000000000000000 $t
     /tmp/cc9CcRC8.s:985    .text.vTimerSetTimerNumber:0000000000000000 vTimerSetTimerNumber
     /tmp/cc9CcRC8.s:993    .bss.pxCurrentTimerList:0000000000000000 $d
     /tmp/cc9CcRC8.s:997    .bss.pxCurrentTimerList:0000000000000000 pxCurrentTimerList
     /tmp/cc9CcRC8.s:1000   .bss.pxOverflowTimerList:0000000000000000 $d
     /tmp/cc9CcRC8.s:1004   .bss.pxOverflowTimerList:0000000000000000 pxOverflowTimerList
     /tmp/cc9CcRC8.s:1007   .bss.ucStaticTimerQueueStorage.6924:0000000000000000 $d
     /tmp/cc9CcRC8.s:1011   .bss.ucStaticTimerQueueStorage.6924:0000000000000000 ucStaticTimerQueueStorage.6924
     /tmp/cc9CcRC8.s:1014   .bss.xActiveTimerList1:0000000000000000 $d
     /tmp/cc9CcRC8.s:1018   .bss.xActiveTimerList1:0000000000000000 xActiveTimerList1
     /tmp/cc9CcRC8.s:1021   .bss.xActiveTimerList2:0000000000000000 $d
     /tmp/cc9CcRC8.s:1025   .bss.xActiveTimerList2:0000000000000000 xActiveTimerList2
     /tmp/cc9CcRC8.s:1028   .bss.xLastTime.6877:0000000000000000 $d
     /tmp/cc9CcRC8.s:1032   .bss.xLastTime.6877:0000000000000000 xLastTime.6877
     /tmp/cc9CcRC8.s:1035   .bss.xStaticTimerQueue.6923:0000000000000000 $d
     /tmp/cc9CcRC8.s:1039   .bss.xStaticTimerQueue.6923:0000000000000000 xStaticTimerQueue.6923
     /tmp/cc9CcRC8.s:1042   .bss.xTimerQueue:0000000000000000 $d
     /tmp/cc9CcRC8.s:1046   .bss.xTimerQueue:0000000000000000 xTimerQueue
     /tmp/cc9CcRC8.s:1049   .bss.xTimerTaskHandle:0000000000000000 $d
     /tmp/cc9CcRC8.s:1053   .bss.xTimerTaskHandle:0000000000000000 xTimerTaskHandle
     /tmp/cc9CcRC8.s:1056   .rodata.prvCheckForValidListAndQueue.str1.4:0000000000000000 $d
     /tmp/cc9CcRC8.s:1060   .rodata.xTimerCreateTimerTask.str1.4:0000000000000000 $d

UNDEFINED SYMBOLS
vListInsert
vPortEnterCritical
vPortExitCritical
vListInitialise
xQueueGenericCreateStatic
vQueueAddToRegistry
vListInitialiseItem
vApplicationGetTimerTaskMemory
xTaskCreateStatic
pvPortMalloc
xTaskGetSchedulerState
xQueueGenericSend
xQueueGenericSendFromISR
uxListRemove
xTaskGetTickCount
vTaskSuspendAll
vQueueWaitForMessageRestricted
xTaskResumeAll
xQueueReceive
vPortFree
